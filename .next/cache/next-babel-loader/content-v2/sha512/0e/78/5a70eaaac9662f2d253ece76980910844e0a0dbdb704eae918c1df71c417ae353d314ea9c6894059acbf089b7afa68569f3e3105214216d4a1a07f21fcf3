{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\React\\\\Practice\\\\section 24\\\\MeetUp Practice Project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { useRouter } from \"next/router\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient } from \"mongodb\";\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n      title: \"My First Meetup\",\n      address: \"15 Boston Street N/Y\",\n      description: \"This is my first meetup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect(\"mongodb+srv://dineshbalan:gbZYZ3bF2MJ3vmA2@cluster0.pvdzydv.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const result = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    paths: result.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    })),\n    fallback: false\n  };\n};\nexport const getStaticProps = async context => {\n  const id = context.params.meetupId;\n  return {\n    props: {\n      meetupDetail: {\n        id: id,\n        title: \"  \",\n        image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n        address: \"15 Boston Street N/Y\",\n        description: \"This is my first meetup\"\n      }\n    }\n  };\n};\nexport default MeetupDetails;","map":{"version":3,"sources":["E:/React/Practice/section 24/MeetUp Practice Project/pages/[meetupId]/index.js"],"names":["useRouter","MeetupDetail","MongoClient","MeetupDetails","props","getStaticPaths","client","connect","db","meetupsCollection","collection","result","find","toArray","close","paths","map","meetup","params","meetupId","_id","toString","fallback","getStaticProps","context","id","meetupDetail","title","image","address","description"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,QAA4B,SAA5B;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,sBACE;AAAA,2BACE,QAAC,YAAD;AACE,MAAA,KAAK,EAAC,wHADR;AAEE,MAAA,KAAK,EAAC,iBAFR;AAGE,MAAA,OAAO,EAAC,sBAHV;AAIE,MAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAUD,CAXD;;AAYA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC,QAAMC,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CACnB,6GADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,MAAM,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,GAAyBC,OAAzB,EAArB;AAEAP,EAAAA,MAAM,CAACQ,KAAP;AACA,SAAO;AACLC,IAAAA,KAAK,EAAEJ,MAAM,CAACK,GAAP,CAAYC,MAAD,KAAa;AAC7BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACG,GAAP,CAAWC,QAAX;AAAZ;AADqB,KAAb,CAAX,CADF;AAILC,IAAAA,QAAQ,EAAE;AAJL,GAAP;AAMD,CAhBM;AAiBP,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC/C,QAAMC,EAAE,GAAGD,OAAO,CAACN,MAAR,CAAeC,QAA1B;AAEA,SAAO;AACLf,IAAAA,KAAK,EAAE;AACLsB,MAAAA,YAAY,EAAE;AACZD,QAAAA,EAAE,EAAEA,EADQ;AAEZE,QAAAA,KAAK,EAAE,IAFK;AAGZC,QAAAA,KAAK,EACH,wHAJU;AAKZC,QAAAA,OAAO,EAAE,sBALG;AAMZC,QAAAA,WAAW,EAAE;AAND;AADT;AADF,GAAP;AAYD,CAfM;AAiBP,eAAe3B,aAAf","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient } from \"mongodb\";\r\n\r\nconst MeetupDetails = (props) => {\r\n  return (\r\n    <>\r\n      <MeetupDetail\r\n        image=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\"\r\n        title=\"My First Meetup\"\r\n        address=\"15 Boston Street N/Y\"\r\n        description=\"This is my first meetup\"\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport const getStaticPaths = async () => {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://dineshbalan:gbZYZ3bF2MJ3vmA2@cluster0.pvdzydv.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const result = await meetupsCollection.find().toArray();\r\n\r\n  client.close();\r\n  return {\r\n    paths: result.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n    fallback: false,\r\n  };\r\n};\r\nexport const getStaticProps = async (context) => {\r\n  const id = context.params.meetupId;\r\n\r\n  return {\r\n    props: {\r\n      meetupDetail: {\r\n        id: id,\r\n        title: \"  \",\r\n        image:\r\n          \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\r\n        address: \"15 Boston Street N/Y\",\r\n        description: \"This is my first meetup\",\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}